# Docker Compose for Nokta POS System
version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: nokta_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: nokta_root_2024
      MYSQL_DATABASE: nokta_pos
      MYSQL_USER: nokta_user
      MYSQL_PASSWORD: nokta_pass_2024
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/nokta_pos_complete.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nokta_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nokta_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass nokta_redis_2024
    volumes:
      - redis_data:/data
    networks:
      - nokta_network

  # Node.js Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nokta_backend
    restart: always
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: nokta_user
      DB_PASSWORD: nokta_pass_2024
      DB_NAME: nokta_pos
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: nokta_redis_2024
      JWT_SECRET: nokta_jwt_secret_key_2024_change_in_production
      JWT_EXPIRE: 7d
    depends_on:
      - mysql
      - redis
    networks:
      - nokta_network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: nokta_phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: nokta_root_2024
    depends_on:
      - mysql
    networks:
      - nokta_network

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: nokta_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./apps/admin_panel/build/web:/usr/share/nginx/html/admin
      - ./apps/customer_app/build/web:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - nokta_network

networks:
  nokta_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
